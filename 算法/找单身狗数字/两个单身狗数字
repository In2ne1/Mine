#include<iostream>
using namespace std;
#include<vector>

//给定一个整数数组 nums
//其中恰好有两个元素只出现一次
//其余所有元素均出现两次
//找出只出现一次的那两个元素

int dealSingleNumber(vector<int>& nums)
{
	int n = nums.size();
	int num = 0;
	for (int i = 0; i < n; ++i)
	{
		num ^= nums.at(i);
	}
	return num;
}

vector<int> singleNumber(vector<int>& nums) 
{
	vector<int> nums1;
	vector<int> nums2;
	int len = nums.size();
	for (int i = 0; i < len; ++i)
	{
		if (nums.at(i) & 1)  //二进制第一位为1的数放在数组容器nums1中
		{
			nums1.push_back(nums.at(i));
		}
		else  //二进制第一位为0的数放在数组容器nums2中
		{
			nums2.push_back(nums.at(i));
		}
	}
	nums.erase(nums.begin(), nums.end());
	nums.push_back(dealSingleNumber(nums1));
	nums.push_back(dealSingleNumber(nums2));
	
	return nums;
}

int main()
{  
	int a[] = { 0,2,5,7,6,9,8,5,7,2,0,6 };  //1001,1000
	vector<int> nums(a, a + sizeof(a) / sizeof(a[0]));
	for (auto i : nums)
	{
		cout << i << " ";
	}
	cout << endl;
	
	singleNumber(nums);

	for (auto i : nums)
	{
		cout << i << " ";
	}
	cout << endl;

	system("pause");
	return 0;
}
