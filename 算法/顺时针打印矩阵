输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字
例如，如果输入如下4 X 4矩阵： 
1  2  3  4 
5  6  7  8 
9  10 11 12 
13 14 15 16 
则依次打印出数字：1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10

class Solution {
public:
    vector<int> printMatrix(vector<vector<int> > matrix) 
    {
        vector<int> ans;
        int row = matrix.size();
        int col = matrix[0].size();
        int turns = ((row < col ? row : col) - 1) / 2 + 1;  //圈数
        for(int i = 0; i < turns; i++)
        {
            for(int j = i; j < col - i; j++)  //从左往右打印
                ans.push_back(matrix[i][j]);
            for(int k = i + 1; k < row - i; k++)  //从上往下打印
                ans.push_back(matrix[k][col - 1 - i]);
            //row - 1 - i != i 和 col - 1 - i != i 是为了防止一行或一列的情况下的重复打印 
            for(int m = col - 2 - i; m >= i && row - 1 - i != i; m--)  //从右往左打印
                ans.push_back(matrix[row - 1 - i][m]);
            for(int n = row - 2 - i; n > i && col - 1 - i != i; n--)  //从下往上打印
                ans.push_back(matrix[n][i]);
        }
        return ans;
    }
};
