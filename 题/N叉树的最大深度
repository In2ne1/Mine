/*
   给定一个 N 叉树，找到其最大深度。

   最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。

   例如，给定一个 3叉树 :
        1
      / | \
     3  2  4
    / \
   5   6

   我们应返回其最大深度，3。

   说明:
   树的深度不会超过 1000。
   树的节点总不会超过 5000。
 */

/*
// Definition for a Node.
class Node {
public:
  int val;
  vector<Node*> children;

  Node() {}

  Node(int _val) {
  val = _val;
}

  Node(int _val, vector<Node*> _children) {
    val = _val;
    children = _children;
  }
};
*/

class Solution {
  public:
    int maxDepth(Node* root) 
    {
      if(root == NULL)
        return 0;
      queue<Node*> qe;
      qe.push(root);
      Node* ptr = qe.front();
      Node* cur = root;
      int count = 0;
      while(!qe.empty())
      {
        cur = qe.front();
        if(cur->children.size()!= 0)
        {
          for(int i = 0; i < cur->children.size(); i++)
          {
            qe.push(cur->children[i]);
          }
        }
        if(ptr == cur)
        {
          ptr = qe.back();
          count++;
        }
        qe.pop();
      }
      return count;
    }
};
