给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。
说明：解集不能包含重复的子集。

示例:
输入: nums = [1,2,3]
输出:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

解题思路：采用位运算方法，所给集合若有n个元素，则有 2^n 个子集
0 ~ 2^n -1 的二进制刚好可以代表子集中放哪个元素；
如三个元素的集合中，7的二进制是111，则表示一个子集里放的是[1，2，3]

class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) 
    {
        vector<vector<int>> ans;
        vector<int> tmp;
        int bit = pow(2, nums.size() - 1);
        for(int i = 0; i < pow(2, nums.size()); i++)
        {
            for(int j = 0; j < nums.size(); j++)
            {
                if((i & (bit >> j)) > 0)
                    tmp.push_back(nums[j]);
            }
            ans.push_back(tmp);
            tmp.clear();
        }
        return ans;
    }
};