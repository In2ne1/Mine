/*
   求n和m之间有多少个回文素数
 */
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;

bool isPrime(int num)
{
  if (num < 0)
    return false;
  for (int i = 2; i <= sqrt(num); i++)
  {
    if (num % i == 0)
      return false;
  }
  return true;
}
bool isPalindromic(int num)
{
  if (num < 0)
    return false;
  string compare = to_string(num);
  reverse(compare.begin(), compare.end());
  return to_string(num) == compare;
}
int func(int n, int m)
{
  int count = 0;
  for (int i = n; i <= m; i++)
  {
    string s = to_string(i);
    for (int j = 0; j < s.size(); j++)
    {
      string::iterator it = s.begin() + j;
      s.erase(it);
      int num = stoi(s);
      if (isPalindromic(num) && isPrime(num))
      {
        count++;
        break;
      }
    }
  }
  return count;
}
int main()
{
  int n, m;
  cin >> n >> m;
  cout << func(n, m) << endl;
  return 0;
}
