#include<iostream>
using namespace std;
#include<string>
#include<algorithm>
//回文串是一个正读和反读都一样的字符串
//现有字符串A，和B，将B串插入到A串中
//统计有多少种插入方法可以使新串是一个回文串
//注：插入位置不同就考虑为不一样的办法
//eg：A = "aba", B = "b"
//共有4种插法"baba","abba","abba","abab"，输出结果为2种

class Solution
{
public:
    int func(const string& A, const string& B)
    {
        string tmp;
        int count = 0;
        size_t length = 0;
        string c;
        tmp = B;   //在最前面插入
        tmp += A;
        c = tmp;
        reverse(c.begin(), c.end());
        if(c == tmp)
        {
            count++;
        }
        tmp.clear();
        for(size_t i = 0; i < A.size(); i++)  //顺序遍历在每个字母后面插入的情况
        {
            length = A.size() - i - 1;
            tmp = A.substr(0, i + 1);
            tmp += B;
            tmp += A.substr(i + 1, length);
            c = tmp;
            reverse(c.begin(), c.end());
            if(c == tmp)
            {
                count++;
            }
        }
        return count;
    }
};
int main()
{
    Solution aa;
    string A, B;
    getline(cin, A);
    getline(cin, B);
    cout << aa.func(A, B);
    return 0;
}
