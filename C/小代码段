#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>

#if 0
int main()
{
	int arr[4][4] = { 1,2,8,9,
					 2,4,9,12,
					 4,7,10,13,
					 6,8,11,15
	};
	int i, j, n = 0;
	scanf("%d", &n);
	for (i = 0, j = 3; i >= 0 && i < 4, j >= 0 && j < 4;)
	{
		if (arr[i][j] > n)
			--j;
		else if (arr[i][j] < n)
			++i;
		else
		{
			printf("含有该数\n");
			break;
		}
	}
	if (i < 0 || i >= 4 || j < 0 || j >= 4)
		printf("没有该数\n");
	system("pause");
	return 0;
}
#endif

#if 0
typedef struct{
	int a;
    char b;
	short c;
	short d;
}AA;
int main()
{
	printf("%d\n", sizeof(AA));
	printf("%d", sizeof(short));
	system("pause");
	return 0;
}
#endif

#if 0
int main()
{
	int a = 10;
	int b = 10;
	b -= b / 3;
	printf("%d\n", b);
	b *= b;	  
	printf("%d\n", b);
	b += b;	 
	printf("%d\n", b);
	printf("%d\n", a += a *= a -= a / 3);  //从右至左
	system("pause");
	return 0;
}
#endif

#if 0
int main()
{
	int i = 0, n = 0;
	while (i < 10)
	{
		n++;
		if (i < 1)
			continue; //直接跳出本次循环，执行下一次循环
		if (i == 5)
			break;
		i++;
	}
	printf("%d", n);
	system("pause");
	return 0;
}
#endif

#if 0
int main()
{
	char str[] = "abc defg yz";
	int i;
	char* p = str;
	while (*p)
	{
		if (*p == ' ')
			*p = '%20';
		*p++;
	}
	printf("%s\n", str);
	system("pause");
	return 0;
}
#endif

#if 0
int main()
{
	int a = 5;
	if (a == 0)
	{
		printf("%d", a - 10);
	}
	else
	{
		printf("%d", a++);
	}
	system("pause");
	return 0;
}
#endif

#if 0
void test()
{
	int a = 2;
	a += 1;
}
int main()
{
	int a = 1;
	test();
	int y = 10;
	int x = y++;
	printf("%d %d", x, y);
	printf("%d\n", a);
	system("pause");
	return 0;
}
#endif


#if 0
int main()
{
	int s = 0, n;
	for (n = 0; n < 4; n++)
	{
		switch (n)
		{
		dafult:s += 4;
		case 1: s += 1;
		case 2: s += 2;
		case 3: s += 3;
		}
	}
	printf("%d\n", s);

	char t[] = "\\123456\123456\t";
	printf("%d\n", strlen(t));

	char *pcColor = "blue1";
	char acColor = "blue1";
	printf("%d\n", strlen(pcColor));
	printf("%d\n", strlen(acColor));
	printf("%d\n", sizeof(pcColor));
	printf("%d\n", sizeof(acColor));

	system("pause");
	return 0;
}

#endif

#if 0
void Func(char str_arg[2])
{
	int m = sizeof(str_arg);
	int n = strlen(str_arg);
	printf("%d\n", m);
	printf("%d\n", n);
}
int main()
{
	
    char *pcColor = "blue1";
    char acColor[] = "blue1";
    printf("%d\n", strlen(pcColor));
    printf("%d\n", strlen(acColor));
    printf("%d\n", sizeof(pcColor));
    printf("%d\n", sizeof(acColor));
	
	
	unsigned long ulA = 0x11000000;  //大端：低地址存数据的高位，从左至右存
	printf("%x\n", *(unsigned char *)&ulA);

	
	int a[9] = { 1,2,3,2,2,2,5,4,2 };
	int i, j;
	int tmp;
	int len = sizeof(a) / sizeof(a[0]);
	for (i = 0; i < len - 1; i++)
	{
		for (j = 1; j < len - 1 - i; j++)
		{
			if (a[j] > a[j + 1])
			{
				tmp = a[j];
				a[j] = a[j + 1];
				a[j + 1] = tmp;
			}
		}
	}
	int num = a[len / 2];
	printf("%d\n", num);
	

	char str[] = "Hellonn";  //7
	Func(str);

	printf("%d\n", 1<<3+2);

	int a[5] = { 1,2,3,4,5 };
	int* p1 = (int*)(&a + 1);
	int* p2 = (int*)((int)a + 1);
	int* p3 = (int*)(a + 1);
	printf("%d,%x,%d\n", p1[-1], p2[0], p3[1]);

    system("pause");
    return 0;
}
#endif

#if 0
#define F(x,y) ((x)+(y))
int main()
{
	char a[20];
	char* p1 = (char*)a;
	char* p2 = (char*)a + 5;
	int n = p2 - p1;
	printf("%d\n", n);

	int c = 3, b = 4;
	printf("%d\n",F(c++,b++));

	int i = 1, sum = 0;
	while (i < 10)
	{
		sum = sum + 1;
		i++;
	}
	printf("%d,%d", i, sum);

	system("pause");
	return 0;
}
#endif

#if 0
int a = 1;
void test()
{
	int a = 2;
	a += 1;
}

int x = 3;
void inc()
{
	static int x = 1;
	x *= (x + 1);
	printf("%d\n", x);
	return;
}

#define MOD(x,y) x%y

char *myString()
{
	char buffer[6] = { 0 };
	char* s = "Hello World!";
	for (int i = 0; i < sizeof(buffer) - 1; i++)
	{
		buffer[i] = *(s + i);
	}
	return buffer;
}
int main()
{
	char a[1000];
	int i;
	for (i = 0; i < 1000; i++)
	{
		a[i] = (char)(-1 - i);
	}
	printf("%d\n", strlen(a));
	
	int j = 1;
	printf("%d,%d\n", sizeof(j++), j);

	printf("%s\n", myString());

	int x[] = { 1,2,3,4,5,6 };
	int* p = x;
	p += 2;
	printf("%d\n", ++*p);

	char* str[3] = { "stra","strb","strc" };
	char* p = str[0];
	int i = 0;
	while (i < 3)
	{
		printf("%s", p++);
		i++;
	}
	

	int a[9] = { 1,2,3,2,2,2,5,4,2 };
	int i, j, tmp;
	int len = sizeof(a) / sizeof(a[0]);
	for (i = 0; i < len - 1; i++)
	{
		for (j = 1; j < len - 1 - i; j++)
		{
			if (a[j] > a[j + 1])
			{
				tmp = a[j];
				a[j] = a[j + 1];
				a[j + 1] = tmp;
			}
		}
	}
	int num = a[len / 2];
	printf("%d", num);

	unsigned long ula = 0x11000000;
	printf("%x\n", *(unsigned char*)&ula);

	char acx[] = "abcdefg";
	char acy[] = { 'a','b','c','d','e','f','g' };
	printf("%d %d\n", strlen(acx), strlen(acy));
	
	int k;
	scanf("%d", &k);
	int a[10] = { 9,4,3,8,6,1,7,5,2,0 };
	int small, i = 0;
	small = a[i];
	for (i = 1; i < k; i++)
	{
		if (a[i] < small)
		{
			small = a[i];
		}
	}
	printf("%d\n", small);

	int x = 0;
	switch (++x)
	{
	case 0: ++x;
	case 1: ++x;
	case 2: ++x;
	}
	printf("%d\n", x);

	int a = 13, b = 94;
	printf("%d\n", MOD(b, a + 4));

	int i = 0;
	int j = 0;
	if ((++i) > 0 || (++j) > 0)
	{
		printf("i = %d; j = %d\n", i, j);
	}

	int y = 10;
	int x = y++;
	printf("%d %d\n", x, y);

	test();
	printf("%d\n", a);

	int m, n;
	for (m = 0, n = -1; n = 0; m++, n++)
		n++;

	int i;
	for (i = 1; i < x; i++)
		inc();


	system("pause");
	return 0;
}
#endif

#if 0
int fun(int x)
{
	int count = 0;
	while (x)
	{
		count++;
		x = x & (x - 1);
	}
	return count;
}


#define CIR(r) r*r
unsigned long g_ulGlobal = 0;
void GlobalInit(unsigned long ulArg)
{
	ulArg = 0x01;
	return;
}
int f(int a)
{
	int b = 0;
	static int c = 3;
	a = c++, b++;
	return (a);
}
void Test()
{
	GlobalInit(g_ulGlobal);
	printf("%lu\n", g_ulGlobal);
	return;
}
int main()
{
	int m = 3;
	int i = 2;
	i *= m + 1;
	printf("%d\n", i);

	int a[4][5] = { 1,2,3,4,5,
		            6,7,8,9,0 };
	int *p = a[1] + 3;
	printf("%d\n", *p);

	char acHello[] = "Hello\0world";
	char acNew[15] = { 0 };
	strcpy(acNew, acHello);
	printf("%d %d\n", strlen(acHello), sizeof(acHello));

	int x;
	int n = 0;
	scanf("%d", &x);
	for (; x > 0; x = x / 2)
	{
		if (x % 2 == 1)
			n++;
	}
	printf("%d\n", n);

	int a = 4, b = 3, *p, *q, *w;
	p = &a;
	q = &b;
	w = q;
	q = NULL;
	*q = 0;
	w = p;
	*p = a;
	*p = *w;

	printf("fun(2017)=%d\n", fun(2019));

	int a[10] = { 1,2,3,4,5 };
	printf("%d\n", sizeof(a));

	int a = 1;
	int b = 2;
	int t;
	t = CIR(a + b);
	printf("%d\n", t);
	
	Test();

	int a = 2, i, k;
	for (i = 0; i < 2; i++)
	{
		k = f(a++);
	}
	printf("%d\n", k);

	
	system("pause");
	return 0;
}
#endif

#if 0
#define INT_PTR int*
typedef int* int_ptr;
INT_PTR a, b;
int_ptr c, d;
int fun(char* s)
{
	char* p = s;
	while (*p != '\0')
	{
		p++;
	}
	return (p - s);
}

int f(int x, int y)
{
	return (x&y) + ((x^y) >> 1);
}


void fun(int x, int y, int*c, int*d)
{
	*c = x + y;
	*d = x - y;
}

#define MA(x,y) (x*y)

#define sum(a,b,c) a+b+c

int f(int n)
{
	static int i = 1;
	if (n >= 5)
		return n;
	n = n + i;
	i++;
	return f(n);
}

int func()
{
	int i, j, k = 0;
	for (i = 0, j = -1; j = 0; i++, j++)
		k++;
	return k;
}

int main()
{
	const int i = 0;
	int *j = (int *)&i;
	*j = 1;
	printf("%d,%d\n", i, *j);

	char arr[] = "qywyer23tdd";
	char tmp = arr[0];
	int i;
	for (i = 0; i < strlen(arr); i++)
	{
		arr[i + 1] = arr[i] ^ arr[i + 1];
		if (arr[i + 1] == tmp)
			break;
		tmp = arr[i + 1];
	}
	printf("%d\n", i);

	int a = 5;
	if (a = 0)
		printf("%d", a - 10);
	else
		printf("%d", a++);

	unsigned char a = 0x15;
	unsigned char b = a << 3;
	printf("%d\n", b);

	printf("%d\n", fun("goodbye!"));

	int a1[8] = { 0 };
	int a2[8] = { 0 };
	int a[8] = { 1,3,5,7,1,3,5,9 };
	for (int i = 0; i < 8; i++)
	{
		if (a[i] >> 1 & 1)
			a1[i] = a[i];
		else
			a2[i] = a[i];
	}
	int tmp1 = a1[0], tmp2 = a2[0];
	for (int j = 1; j < 8; j++)
	{
		tmp1 ^= a1[j];
		tmp2 ^= a2[j];
	}
	printf("%d,%d\n", tmp1, tmp2);

	int result = f(2, 4);
	printf("%d\n", result);
	
	int count = 0;
	for (int i = 0; i <= 10; i++)
	{
		count++;
	}
	printf("%d\n", count);

	int a = 4, b = 3, c = 0, d = 0;
	fun(a, b, &c, &d);
	printf("%d %d\n", c, d);
	
	int a[10] = { 1,3,5 };
	int *p = a+1;
	printf("%d", *++p);

	int i = 5;
	i = MA(i, i + 1) - 7;
	printf("%d\n", i);

	int i = 3;
	int j = 2;
	printf("%d\n", i*sum(i, (i + j), j));

	printf("%d\n", f(1));

	printf("%d\n", (func()));

	system("pause");
	return 0;
}

#endif

#if 0
struct student
{
	char name[10];
	int age;
	char gender;
}std[3],*p = std;

int main()
{
	scanf("%d", &(*p).age);
	scanf("%c", &std[0].gender);
	scanf("%c", &(p->gender));
	scanf("%s", &std->name);

	int a = 2, *p1, **p2;
	p2 = &p1;
	p1 = &a;
	a++;
	printf("%d,%d,%d\n", a, *p1, **p2);

	int k, j, s;
	for (k = 2; k < 6; k++, k++)
	{
		s = 1;
		for (j = k; j < 6; j++)
			s += j;
	}
	printf("%d\n", s);

	int arr[] = { 6,7,8,9,10 };
	int* ptr = arr;
	*(ptr++) += 123;
	printf("%d,%d\n", *ptr, *(++ptr));

	system("pause");
	return 0;
}
#endif


#define N 3
#define Y(n) ((N+1)*n)
void foo(int b[][3])
{
	++b;
	b[1][1] = 9;
}

int main()
{
	int a = 1234321;
	printf("%d\n", a);
	for (int i = a; i > 0; i = i / 10)
	{
		printf("%d", i % 10);
	}

	char a[] = "123456789", *p = a;
	int i = 0;
	while (*p)
	{
		if (i % 2 == 0)
			*p = '!';
		i++;
		p++;
	}
	puts(a);

	char str[] = "ABCDEFG";
	char *p1, *p2;
	p1 = "abcd";
	p2 = "efgh";
	strcpy(str + 1, p2 + 1);
	strcpy(str + 3, p1 + 3);
	printf("%s\n", str);

	unsigned int a = 0xFFFFFFF7;
	unsigned char i = (unsigned char)a;
	char* b = (char*)a;
	printf("%08x,%08x", i, b);
	
	int j = 4;
	int i = j;
	for (; i <= 2 * j; i++)
	{
		switch (i / j)
		{
		case 0:
		case 1:
			printf("*");
			break;
		case 2:
			printf("#");
		}
	}

	int x = 1, y = 012;
	printf("%d", y * x++);

	printf("%d\n", 'a');

	int x, y;
	scanf("%d %d", &x, &y);
	int i, sum = 1;
	for (i = 1; i <= y; i++)
	{
		sum = sum*x;
	}
	printf("%d", sum);

	char ch = -1;
	printf("%d\n", ch);

	unsigned short sht = 0;
	sht--;
	printf("%d", sht);

	int arr[] = { 1,2,3,4,5 };
	int* ptr = (int *)(&arr + 1);
	printf("%d %d\n", *(arr + 1), *(ptr - 1));

	unsigned long pulArray[] = { 6,7,8,9,10 };
	unsigned long* pulPtr;
	pulPtr = pulArray;
	*(pulPtr + 2) += 2;
	printf("%d,%d\n", *pulPtr, *(pulPtr + 2));

	int i;
	char acNew[20] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };
	for (i = 0; i < 10; i++)
	{
		acNew[i] = '0';
	}
	printf("%d\n", strlen(acNew));

	printf("%lf\n", (double)(10 / 4 * 4));

	int n;
	scanf("%d", &n);
	double sum = n;
	while (sum >= 1)
	{
		if (sum == 1)
		{
			printf("1");
			break;
		}
		sum = sum / 2;
	}

	int i, x, y;
	i = x = y = 0;
	do {
		++i;
		if (i % 2)
			x += i;
		i++;
		y += i++;
	} while (i <= 7);
	printf("%d %d %d\n", i, x, y);


	int a = 2, b = 5;
	a++;
	b++;
	printf("%d\n",a+b);

	int i = 6;
	if (i <= 6)
		printf("Hello\n");
	else
		printf("bye-bye\n");
	
	int z = 2 * (N + Y(5 + 1));
	printf("%d\n", z);

	int i = 10;
	long long t = sizeof(i++);
	printf("%d", i);

	int x = 0, y = 0, z = 0;
	z = (x == 1) && (y = 2);
	printf("%d", y);

	int a[3][3] = { {1,2,3},{4,5,6},{7,8,9} };
	foo(a);
	printf("%d", a[2][1]);

	char* szStr = "abcde";
	szStr += 2;
	printf("%lu\n", szStr);

	system("pause");
	return 0;
}
